/* data plane caching application */
// choose between cms and precision OR hash and precision for eviction/insertion

include "trackermodules.dpt"

/* symbolics */
symbolic int entries;
symbolic size logentries;
symbolic size tables;
symbolic int cols;  // for cms only, but same interface
symbolic size logcols;
symbolic size rows;
symbolic bool eviction; // decide which struct to use for evictions

/* module */
//module Cache = Cmscache if eviction else Precisioncache;
module Cache = Hashcache if eviction else Precisioncache;
global Cache.t<<logentries,tables,logcols,rows>> c = Cache.create(entries,cols);
//global Cmscache.t<<logentries, tables, logcols, rows>> pc = Cmscache.create(entries,cols);
//global Precisioncache.t<<logentries, tables, logcols, rows>> pc = Precisioncache.create(entries,cols);


/* events */
entry event ip_in(int key, int insert, int min_stg, int cacheval, int<<48>> timestamp);
exit event ip_out();

/* handler */
handle ip_in(int key, int insert, int min_stg, int cacheval, int<<48>> timestamp) {

    Cache.cache(c,key,insert,min_stg,cacheval,timestamp);
    generate ip_out();

}


